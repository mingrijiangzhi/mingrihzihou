# 题目
L2-005 集合相似度 (25 分)
给定两个整数集合，它们的相似度定义为：N 
c
​	
 /N 
t
​	
 ×100%。其中N 
c
​	
 是两个集合都有的不相等整数的个数，N 
t
​	
 是两个集合一共有的不相等整数的个数。你的任务就是计算任意一对给定集合的相似度。

输入格式：
输入第一行给出一个正整数N（≤50），是集合的个数。随后N行，每行对应一个集合。每个集合首先给出一个正整数M（≤10 
4
 ），是集合中元素的个数；然后跟M个[0,10 
9
 ]区间内的整数。

之后一行给出一个正整数K（≤2000），随后K行，每行对应一对需要计算相似度的集合的编号（集合从1到N编号）。数字间以空格分隔。

输出格式：
对每一对需要计算的集合，在一行中输出它们的相似度，为保留小数点后2位的百分比数字。

输入样例：
3
3 99 87 101
4 87 101 5 87
7 99 101 18 5 135 18 99
2
1 2
1 3
输出样例：
50.00%
33.33%
# 思路
**本人不懂c++，但确实是用c++做出来了，主要还是C语言，c++中主要用到了集合的相关用法，我会在代码中标记出来。其他的就很简单了，看代码很容易就可以知道思路，**
# 代码
~~~·
#include<stdio.h>
#include<set>//引入set部分
using namespace std;//必须添加，需要std中的一些东西
int main()
{
	int n;
	scanf("%d",&n);
	int m,l;
	int k,a,b;
	set<int>s[55];创建一个int型的集合数组
	for(int i=0;i<n;i++){
		scanf("%d",&m);
		while(m--){
			scanf("%d",&l);
			s[i].insert(l);//用插入的方式添加集合元素
		}
	}
	scanf("%d",&k);
	while(k--){
		scanf("%d %d",&a,&b);
		int cta=s[a-1].size(),ctb=s[b-1].size();//size()函数可以求出集合中的元素个数
		int ct=0;
		set<int>::iterator iter;//创建一个集合的迭代器
		for(iter=s[a-1].begin();iter!=s[a-1].end();iter++){  //对集合中的元素进行迭代
			if(s[b-1].find(*iter)!=s[b-1].end()){  //迭代对象是一个地址，所以要对其进行取值
				ct++;
			}
			
		}
		printf("%.2lf%%\n",ct*1.0/(cta+ctb-ct)*100); 
	}
	
	return 0;
}