# 题目
形如 a^3= b^3 + c^3 + d^3a 
3
 =b 
3
 +c 
3
 +d 
3
  的等式被称为完美立方等式。

例如 12^3= 6^3 + 8^3 + 10^312 
3
 =6 
3
 +8 
3
 +10 
3
 。

编写一个程序，对任给的正整数 N (N \le 100)N(N≤100)，寻找所有的四元组 (a, b, c, d)(a,b,c,d)，使得 a^3 = b^3 + c^3 + d^3a 
3
 =b 
3
 +c 
3
 +d 
3
 ，其中 a,b,c,da,b,c,d 大于 11，小于等于 NN，且 b \le c \le db≤c≤d。

输入格式
一个正整数 N (N \le 100)N(N≤100)。

输出格式
每行输出一个完美立方。输出格式为：

Cube = a, Triple = (b,c,d)

其中 a,b,c,da,b,c,d 所在位置分别用实际求出四元组值代入。

请按照 aa 的值，从小到大依次输出。当两个完美立方等式中 aa 的值相同，则 bb 值小的优先输出；仍相同则 cc 值小的优先输出；再相同则 dd 值小的先输出。

Sample Input
24
Sample Output
Cube = 6, Triple = (3,4,5)
Cube = 12, Triple = (6,8,10)
Cube = 18, Triple = (2,12,16)
Cube = 18, Triple = (9,12,15)
Cube = 19, Triple = (3,10,18)
Cube = 20, Triple = (7,14,17)
Cube = 24, Triple = (12,16,20)
# 代码
```
#include<stdio.h>
#include<math.h> 
int main() 
{
	int a,b,c,d;
	int n;
	scanf("%d",&n);
	for(a=2;a<=n;a++){
		for(b=2;b<a;b++){
			for(c=b;c<a;c++){
				for(d=c;d<a;d++){
					if(pow(a,3)==pow(b,3)+pow(c,3)+pow(d,3)){
						printf("Cube = %d, Triple = (%d,%d,%d)\n",a,b,c,d);
					}
				}
			}
		}
	}
}