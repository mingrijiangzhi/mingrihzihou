# 题目
元旦快到了，校学生会让乐乐负责新年晚会的纪念品发放工作。为使得参加晚会的同学所获得 的纪念品价值相对均衡，他要把购来的纪念品根据价格进行分组，但每组最多只能包括两件纪念品， 并且每组纪念品的价格之和不能超过一个给定的整数。为了保证在尽量短的时间内发完所有纪念品，乐乐希望分组的数目最少。

你的任务是写一个程序，找出所有分组方案中分组数最少的一种，输出最少的分组数目。

输入格式
第 11 行包括一个整数 ww，为每组纪念品价格之和的上限。

第 22 行为一个整数 nn，表示购来的纪念品的总件数。

第 3 \sim n+23∼n+2 行每行包含一个正整数 p_i ( 5 \le p_i \le w )p 
i
​	
 (5≤p 
i
​	
 ≤w) ，表示所对应纪念品的价格。

输出格式
包含一个整数，即最少的分组数目。

数据范围
50\%50% 的数据满足：1 \le n \le 151≤n≤15。

100\%100% 的数据满足：1 \le n \le 30000, 80 \le w \le 2001≤n≤30000,80≤w≤200。

Sample 1
Input	Output
100
9
90
20
20
30
50
60
70
80
90
6
# 代码
```
#include<stdio.h>
#include<stdlib.h>
void quicksort(int *a,int low,int high);
int main() 
{
	int a[500005],i,j,sum,t;
	int n,m;
	scanf("%d",&m);
	scanf("%d",&n);
	sum=n;
	for(i=0;i<n;i++){
		scanf("%d",&a[i]);
	}
	quicksort(a,0,n-1);
	i=0;
	j=n-1;
	while(i<j){
		if(a[i]+a[j]<=m)
		{
			i++;
			j--;
			sum-=1;
		}else{
			j--;
		}
	}
	printf("%d",sum);
	return 0;
}
void quicksort(int *a,int low,int high)
{
	if(low>=high){
		return;
	}
	int left=low;
	int right=high;
	int t=a[left];
	while(left<right){
		while(left<right&&a[right]>=t){
			right--;
		}
		a[left]=a[right];
		while(left<right&&a[left]<=t){
			left++;
		}
		a[right]=a[left];
	}
	a[right]=t;
	quicksort(a,low,left-1);
	quicksort(a,left+1,high);
	
}