# 题目
L1-002 打印沙漏 (20 分)
本题要求你写个程序把给定的符号打印成沙漏的形状。例如给定17个“*”，要求按下列格式打印

*****
 ***
  *
 ***
*****
所谓“沙漏形状”，是指每行输出奇数个符号；各行符号中心对齐；相邻两行符号数差2；符号数先从大到小顺序递减到1，再从小到大顺序递增；首尾符号数相等。

给定任意N个符号，不一定能正好组成一个沙漏。要求打印出的沙漏能用掉尽可能多的符号。

输入格式:
输入在一行给出1个正整数N（≤1000）和一个符号，中间以空格分隔。

输出格式:
首先打印出由给定符号组成的最大的沙漏形状，最后在一行中输出剩下没用掉的符号数。

输入样例:
19 *
输出样例:
*****
 ***
  *
 ***
*****
2
# 思路
**这个题主要使用循环来完成，我们不难发现行数减去1再除以二便是沙漏的一部分的行数，并且每一行打印的字符数量和行数有着一定的关系，即（2n+1）的关系；除此之外，我们不难看出空格和行数之间的关系，所以直接用循环将沙漏分为两部分打印即可。**
# 代码
```
#include<stdio.h>
int main()
{
	char a;
	int b,i,j,t,sum=0,f,s=0;
	scanf("%d %c",&b,&a);
	for(i=2;i;i++){
		sum+=2*i-1;
		if(sum>(b-1)/2){
			break;
		}
		f+=1;
	}
	sum-=2*i-1;
	sum=sum*2+1;
	i-=1;
	t=f;
	while(f--){
		for(j=0;j<s;j++){
			printf(" ");
		}
		for(j=0;j<2*i-1;j++){		
			printf("%c",a);
			if(j==2*i-2){
				printf("\n");
			}
		}
		s+=1;
		i-=1;
	}
	t+=1;
	while(t--){
		for(j=0;j<s;j++){
			printf(" ");
		}
		for(j=0;j<2*i-1;j++){
			printf("%c",a);
			if(j==2*i-2){
				printf("\n");
			}
		}
		i+=1;
		s-=1;	
	}
	printf("%d",b-sum);
	return 0;
}
```