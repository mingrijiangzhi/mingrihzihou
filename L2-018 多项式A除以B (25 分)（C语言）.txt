# 题目
L2-018 多项式A除以B (25 分)
这仍然是一道关于A/B的题，只不过A和B都换成了多项式。你需要计算两个多项式相除的商Q和余R，其中R的阶数必须小于B的阶数。

输入格式：
输入分两行，每行给出一个非零多项式，先给出A，再给出B。每行的格式如下：

N e[1] c[1] ... e[N] c[N]
其中N是该多项式非零项的个数，e[i]是第i个非零项的指数，c[i]是第i个非零项的系数。各项按照指数递减的顺序给出，保证所有指数是各不相同的非负整数，所有系数是非零整数，所有整数在整型范围内。

输出格式：
分两行先后输出商和余，输出格式与输入格式相同，输出的系数保留小数点后1位。同行数字间以1个空格分隔，行首尾不得有多余空格。注意：零多项式是一个特殊多项式，对应输出为0 0 0.0。但非零多项式不能输出零系数（包括舍入后为0.0）的项。在样例中，余多项式其实有常数项-1/27，但因其舍入后为0.0，故不输出。

输入样例：
4 4 1 2 -3 1 -1 0 -1
3 2 3 1 -2 0 1
输出样例：
3 2 0.3 1 0.2 0 -1.0
1 1 -3.1
# 思路
**模拟多项式相除的过程即可**
# 代码
~~~`
#include<stdio.h>
#include<math.h> 
#define min 1e-6
int n,m;
int i,j;
int f1,f2;
int x;
int cnt=0;
int max1=-1,max2=-1;
double c1[100000],c2[100000],c3[100000];
int main()
{
	scanf("%d",&n);
	for(i=0;i<n;i++){
		scanf("%d",&x);
		scanf("%lf",&c1[x]);
		if(max1<x){
			max1=x;
		}
	}
	scanf("%d",&m);
	for(i=0;i<m;i++){
		scanf("%d",&x);
		scanf("%lf",&c2[x]);
		if(max2<x){
			max2=x;
		}
	}
	f1=max1,f2=max2;
	while(f1>=f2){
		double t=c1[f1]/c2[f2];
		c3[f1-f2]=t;
		for(i=f1,j=f2;j>=0;i--,j--){
			c1[i]-=t*c2[j];
		}
		while(fabs(c1[f1])<min){
			f1--;
		}
		
	}
	int cnt=0;
	for(i=max1-max2;i>=0;i--){
		if(fabs(c3[i])+0.05>=0.1){
			cnt++;
		}
	}
	printf("%d",cnt);
	if(cnt==0){
		printf(" 0 0.0");
	}else{
		for(i=max1-max2;i>=0;i--){
			if(fabs(c3[i])+0.05>=0.1){
				printf(" %d %.1lf",i,c3[i]);
			}
		}
	}
	printf("\n");
	cnt=0;
	for(i=f1;i>=0;i--){
		if(fabs(c1[i])+0.05>=0.1){
			cnt++;
		}
	}
	printf("%d",cnt);
	if(cnt==0){
		printf(" 0 0.0");
	}else{
		for(i=f1;i>=0;i--){
			if(fabs(c1[i])+0.05>=0.1){
				printf(" %d %.1lf",i,c1[i]);
			}
		}
	}
	return 0;	
} 


